<?php

// This file was generated by liblab | https://liblab.com/

namespace WellSyncServicesCareConnect\Models;

use Symfony\Component\Serializer\Annotation\SerializedName;

class Clinician
{
    #[SerializedName('id')]
    public ?string $id;

    #[SerializedName('tenantId')]
    public ?string $tenantId;

    /**
     * external_id is an optional field that could be used to identify a clinician using a external identifier.
     */
    #[SerializedName('externalId')]
    public ?string $externalId;

    #[SerializedName('firstName')]
    public ?string $firstName;

    #[SerializedName('lastName')]
    public ?string $lastName;

    #[SerializedName('npi')]
    public ?string $npi;

    #[SerializedName('dea')]
    public ?string $dea;

    #[SerializedName('createdAt')]
    public ?string $createdAt;

    /**
	 * The clinician's private key must be encrypted using the wrapper key following the recommended encryption standards.
 The encrypted private key is only stored in the database, allowing the client to fetch the private key
 and decrypt its content using the wrapper key when needing to sign messages.
	 */
    #[SerializedName('privateKey')]
    public ?string $privateKey;

    /**
	 * The clinician encrypted wrapper key has to be encrypted following the recommended encryption standards
 and encrypted on the client's device. The encrypted wrapper key is only stored in the database,
 allowing the client to fetch the wrapper key and decrypt its content when needing to sign messages.
	 */
    #[SerializedName('wrapperKey')]
    public ?string $wrapperKey;

    /**
	 * @var string[]|null
	 * Recovery keys are randomly generated and used to encrypt the clinician's wrapper key.
 These encrypted recovery keys are stored and can be used to recover the clinician's private key if access is lost.
	 */
    #[SerializedName('recoveryKeys')]
    public ?array $recoveryKeys;

    /**
     * Clinician email address. This email address is used for notifications and two-factor authentication.
     */
    #[SerializedName('email')]
    public ?string $email;

    /**
     * Clinician personal phone number. This phone number is used for notifications and two-factor authentication.
     */
    #[SerializedName('phone')]
    public ?string $phone;

    public function __construct(
        ?string $id = null,
        ?string $tenantId = null,
        ?string $externalId = null,
        ?string $firstName = null,
        ?string $lastName = null,
        ?string $npi = null,
        ?string $dea = null,
        ?string $createdAt = null,
        ?string $privateKey = null,
        ?string $wrapperKey = null,
        ?array $recoveryKeys = [],
        ?string $email = null,
        ?string $phone = null
    ) {
        $this->id = $id;
        $this->tenantId = $tenantId;
        $this->externalId = $externalId;
        $this->firstName = $firstName;
        $this->lastName = $lastName;
        $this->npi = $npi;
        $this->dea = $dea;
        $this->createdAt = $createdAt;
        $this->privateKey = $privateKey;
        $this->wrapperKey = $wrapperKey;
        $this->recoveryKeys = $recoveryKeys;
        $this->email = $email;
        $this->phone = $phone;
    }
}
